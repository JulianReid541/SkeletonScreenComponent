[{"C:\\Users\\ReidJ\\Documents\\Projects\\frontendtuts\\SkeletonScreenTutorial\\skeletonscreen\\src\\index.js":"1","C:\\Users\\ReidJ\\Documents\\Projects\\frontendtuts\\SkeletonScreenTutorial\\skeletonscreen\\src\\reportWebVitals.js":"2","C:\\Users\\ReidJ\\Documents\\Projects\\frontendtuts\\SkeletonScreenTutorial\\skeletonscreen\\src\\App.js":"3"},{"size":500,"mtime":499162500000,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"6","hashOfConfig":"5"},{"size":2399,"mtime":1607464328794,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1jutikg",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"10"},"C:\\Users\\ReidJ\\Documents\\Projects\\frontendtuts\\SkeletonScreenTutorial\\skeletonscreen\\src\\index.js",[],["16","17"],"C:\\Users\\ReidJ\\Documents\\Projects\\frontendtuts\\SkeletonScreenTutorial\\skeletonscreen\\src\\reportWebVitals.js",[],"C:\\Users\\ReidJ\\Documents\\Projects\\frontendtuts\\SkeletonScreenTutorial\\skeletonscreen\\src\\App.js",["18"],"import React, { useState, useEffect } from \"react\";\nimport styled, { css, keyframes } from \"styled-components\";\nimport { rgba } from \"polished\";\nimport boy from \"./boy.svg\";\n\nconst Card = styled.div`\n  border-radius: 0.5rem;\n  background: #f2edf7;\n  color: white;\n  width: 200px;\n  padding: 1.5rem;\n`;\n\nconst skeletonColor = \"#e0daeb\";\nconst borderRadius = \"3px\";\n\nconst glimmer = keyframes`\n  0% { transform: rotate(10deg) translate(-200%, -50%); }\n  100% { transform: rotate(10deg) translate(200%, -50%); }\n`;\n\nconst skeletonShimmer = css`\n  content: \"\";\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100px;\n  height: 200px;\n  background: ${rgba(\"#190932\", 0.05)};\n  animation: ${glimmer} 1.25s infinite linear;\n`;\n\nconst Skeleton = styled.div`\n  position: relative;\n  overflow: hidden;\n  width: ${(props) => props.width || \"120px\"};\n  height: ${(props) => props.height || \"12px\"};\n  margin: ${(props) => props.margin || 0};\n  border-radius: ${borderRadius};\n  background: ${skeletonColor};\n  &::before {\n    ${skeletonShimmer};\n  }\n`;\n\nconst Row = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Image = styled.div`\n  width: 40px;\n  height: 40px;\n  margin-right: 1rem;\n  border-radius: ${borderRadius};\n  background: #a36aff;\n  background-size: 80%;\n  background-position: center bottom;\n  background-repeat: no-repeat;\n`;\n\nconst Text = styled.div`\n  margin: ${(props) => props.margin || 0};\n  font-weight: 500;\n  font-size: ${(props) => props.fontSize || \"1rem\"};\n  color: ${(props) => props.color};\n`;\n\nconst SkeletonScreen = ({}) => {\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n    }, 3750);\n  });\n\n  return (\n    <Card>\n      {loading ? (\n        <>\n          <Row>\n            <Skeleton width=\"40px\" height=\"40px\" margin=\"0 1rem 0 0\" />\n            <div>\n              <Skeleton width=\"130px\" margin=\"0 0 0.6rem\" />\n              <Skeleton width=\"80px\" />\n            </div>\n          </Row>\n        </>\n      ) : (\n        <>\n          <Row>\n            <Image style={{ backgroundImage: `url(${boy})` }} />\n            <div>\n              <Text color=\"#565360\">Matt Drinkwater</Text>\n              <Text color=\"#ACAAB7\" fontSize=\"0.875rem\">\n                Developer\n              </Text>\n            </div>\n          </Row>\n        </>\n      )}\n    </Card>\n  );\n};\n\nexport default SkeletonScreen;",{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":69,"column":25,"nodeType":"25","messageId":"26","endLine":69,"endColumn":27},"no-native-reassign",["27"],"no-negated-in-lhs",["28"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation"]